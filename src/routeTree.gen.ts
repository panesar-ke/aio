/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthedLogoutRouteImport } from './routes/_authed/logout'
import { Route as AuthedDashboardRouteImport } from './routes/_authed/dashboard'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as AuthedProcurementRouteRouteImport } from './routes/_authed/procurement/route'
import { Route as AuthedProcurementMaterialRequisitionIndexRouteImport } from './routes/_authed/procurement/material-requisition/index'
import { Route as AuthedProcurementMaterialRequisitionNewRouteImport } from './routes/_authed/procurement/material-requisition/new'
import { Route as AuthedProcurementMaterialRequisitionRequisitionIdEditRouteImport } from './routes/_authed/procurement/material-requisition/$requisitionId.edit'
import { Route as AuthedProcurementMaterialRequisitionRequisitionIdDetailsRouteImport } from './routes/_authed/procurement/material-requisition/$requisitionId.details'

const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedLogoutRoute = AuthedLogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedDashboardRoute = AuthedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => authRouteRoute,
} as any)
const AuthedProcurementRouteRoute = AuthedProcurementRouteRouteImport.update({
  id: '/procurement',
  path: '/procurement',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedProcurementMaterialRequisitionIndexRoute =
  AuthedProcurementMaterialRequisitionIndexRouteImport.update({
    id: '/material-requisition/',
    path: '/material-requisition/',
    getParentRoute: () => AuthedProcurementRouteRoute,
  } as any)
const AuthedProcurementMaterialRequisitionNewRoute =
  AuthedProcurementMaterialRequisitionNewRouteImport.update({
    id: '/material-requisition/new',
    path: '/material-requisition/new',
    getParentRoute: () => AuthedProcurementRouteRoute,
  } as any)
const AuthedProcurementMaterialRequisitionRequisitionIdEditRoute =
  AuthedProcurementMaterialRequisitionRequisitionIdEditRouteImport.update({
    id: '/material-requisition/$requisitionId/edit',
    path: '/material-requisition/$requisitionId/edit',
    getParentRoute: () => AuthedProcurementRouteRoute,
  } as any)
const AuthedProcurementMaterialRequisitionRequisitionIdDetailsRoute =
  AuthedProcurementMaterialRequisitionRequisitionIdDetailsRouteImport.update({
    id: '/material-requisition/$requisitionId/details',
    path: '/material-requisition/$requisitionId/details',
    getParentRoute: () => AuthedProcurementRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof authRouteRouteWithChildren
  '/procurement': typeof AuthedProcurementRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/logout': typeof AuthedLogoutRoute
  '/procurement/material-requisition/new': typeof AuthedProcurementMaterialRequisitionNewRoute
  '/procurement/material-requisition': typeof AuthedProcurementMaterialRequisitionIndexRoute
  '/procurement/material-requisition/$requisitionId/details': typeof AuthedProcurementMaterialRequisitionRequisitionIdDetailsRoute
  '/procurement/material-requisition/$requisitionId/edit': typeof AuthedProcurementMaterialRequisitionRequisitionIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof authRouteRouteWithChildren
  '/procurement': typeof AuthedProcurementRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/logout': typeof AuthedLogoutRoute
  '/procurement/material-requisition/new': typeof AuthedProcurementMaterialRequisitionNewRoute
  '/procurement/material-requisition': typeof AuthedProcurementMaterialRequisitionIndexRoute
  '/procurement/material-requisition/$requisitionId/details': typeof AuthedProcurementMaterialRequisitionRequisitionIdDetailsRoute
  '/procurement/material-requisition/$requisitionId/edit': typeof AuthedProcurementMaterialRequisitionRequisitionIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/procurement': typeof AuthedProcurementRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/_authed/dashboard': typeof AuthedDashboardRoute
  '/_authed/logout': typeof AuthedLogoutRoute
  '/_authed/procurement/material-requisition/new': typeof AuthedProcurementMaterialRequisitionNewRoute
  '/_authed/procurement/material-requisition/': typeof AuthedProcurementMaterialRequisitionIndexRoute
  '/_authed/procurement/material-requisition/$requisitionId/details': typeof AuthedProcurementMaterialRequisitionRequisitionIdDetailsRoute
  '/_authed/procurement/material-requisition/$requisitionId/edit': typeof AuthedProcurementMaterialRequisitionRequisitionIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/procurement'
    | '/forgot-password'
    | '/login'
    | '/dashboard'
    | '/logout'
    | '/procurement/material-requisition/new'
    | '/procurement/material-requisition'
    | '/procurement/material-requisition/$requisitionId/details'
    | '/procurement/material-requisition/$requisitionId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/procurement'
    | '/forgot-password'
    | '/login'
    | '/dashboard'
    | '/logout'
    | '/procurement/material-requisition/new'
    | '/procurement/material-requisition'
    | '/procurement/material-requisition/$requisitionId/details'
    | '/procurement/material-requisition/$requisitionId/edit'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/_authed'
    | '/_authed/procurement'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/_authed/dashboard'
    | '/_authed/logout'
    | '/_authed/procurement/material-requisition/new'
    | '/_authed/procurement/material-requisition/'
    | '/_authed/procurement/material-requisition/$requisitionId/details'
    | '/_authed/procurement/material-requisition/$requisitionId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  AuthedRoute: typeof AuthedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/logout': {
      id: '/_authed/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AuthedLogoutRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/dashboard': {
      id: '/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/_authed/procurement': {
      id: '/_authed/procurement'
      path: '/procurement'
      fullPath: '/procurement'
      preLoaderRoute: typeof AuthedProcurementRouteRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/procurement/material-requisition/': {
      id: '/_authed/procurement/material-requisition/'
      path: '/material-requisition'
      fullPath: '/procurement/material-requisition'
      preLoaderRoute: typeof AuthedProcurementMaterialRequisitionIndexRouteImport
      parentRoute: typeof AuthedProcurementRouteRoute
    }
    '/_authed/procurement/material-requisition/new': {
      id: '/_authed/procurement/material-requisition/new'
      path: '/material-requisition/new'
      fullPath: '/procurement/material-requisition/new'
      preLoaderRoute: typeof AuthedProcurementMaterialRequisitionNewRouteImport
      parentRoute: typeof AuthedProcurementRouteRoute
    }
    '/_authed/procurement/material-requisition/$requisitionId/edit': {
      id: '/_authed/procurement/material-requisition/$requisitionId/edit'
      path: '/material-requisition/$requisitionId/edit'
      fullPath: '/procurement/material-requisition/$requisitionId/edit'
      preLoaderRoute: typeof AuthedProcurementMaterialRequisitionRequisitionIdEditRouteImport
      parentRoute: typeof AuthedProcurementRouteRoute
    }
    '/_authed/procurement/material-requisition/$requisitionId/details': {
      id: '/_authed/procurement/material-requisition/$requisitionId/details'
      path: '/material-requisition/$requisitionId/details'
      fullPath: '/procurement/material-requisition/$requisitionId/details'
      preLoaderRoute: typeof AuthedProcurementMaterialRequisitionRequisitionIdDetailsRouteImport
      parentRoute: typeof AuthedProcurementRouteRoute
    }
  }
}

interface authRouteRouteChildren {
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AuthedProcurementRouteRouteChildren {
  AuthedProcurementMaterialRequisitionNewRoute: typeof AuthedProcurementMaterialRequisitionNewRoute
  AuthedProcurementMaterialRequisitionIndexRoute: typeof AuthedProcurementMaterialRequisitionIndexRoute
  AuthedProcurementMaterialRequisitionRequisitionIdDetailsRoute: typeof AuthedProcurementMaterialRequisitionRequisitionIdDetailsRoute
  AuthedProcurementMaterialRequisitionRequisitionIdEditRoute: typeof AuthedProcurementMaterialRequisitionRequisitionIdEditRoute
}

const AuthedProcurementRouteRouteChildren: AuthedProcurementRouteRouteChildren =
  {
    AuthedProcurementMaterialRequisitionNewRoute:
      AuthedProcurementMaterialRequisitionNewRoute,
    AuthedProcurementMaterialRequisitionIndexRoute:
      AuthedProcurementMaterialRequisitionIndexRoute,
    AuthedProcurementMaterialRequisitionRequisitionIdDetailsRoute:
      AuthedProcurementMaterialRequisitionRequisitionIdDetailsRoute,
    AuthedProcurementMaterialRequisitionRequisitionIdEditRoute:
      AuthedProcurementMaterialRequisitionRequisitionIdEditRoute,
  }

const AuthedProcurementRouteRouteWithChildren =
  AuthedProcurementRouteRoute._addFileChildren(
    AuthedProcurementRouteRouteChildren,
  )

interface AuthedRouteChildren {
  AuthedProcurementRouteRoute: typeof AuthedProcurementRouteRouteWithChildren
  AuthedDashboardRoute: typeof AuthedDashboardRoute
  AuthedLogoutRoute: typeof AuthedLogoutRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedProcurementRouteRoute: AuthedProcurementRouteRouteWithChildren,
  AuthedDashboardRoute: AuthedDashboardRoute,
  AuthedLogoutRoute: AuthedLogoutRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  AuthedRoute: AuthedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
